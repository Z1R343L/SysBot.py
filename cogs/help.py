import discord
from discord.ext import commands
from yaml import load
import datetime
import itertools
import psutil
from discord_components import DiscordComponents, SelectOption, Select, Button, ButtonStyle
import asyncio

with open("config.yaml") as file:
    data = load(file)
    botprefix = data["botprefix"]
    support2 = data["support-server-invite"]

ttr = str(f"""
```yaml
Prefix: {botprefix} - Required Parameter: <> - Optional Parameter: ()
```
""")

sysbotval = str(
    '\x1f ‚ãÖ testtradetest `<eb8>`: Request a pokemon from the bot.\x1f ‚ãÖ guide: Shows a video on how to use SysBot.\x1f ‚ãÖ languide: Shows instructions on how to download LAN play.\x1f ‚ãÖ lgpe: Shows a video on how to use the LGPE SysBot.\x1f ‚ãÖ queue: Sends you current queue position.\x1f ‚ãÖ queue list: Displays the total queue list.\x1f ‚ãÖ queue leave: Requests to leave the queue.\x1f'
)


filesval = str(
    '\x1f ‚ãÖ pk8 `<pokemon>`: Sends a `pk8` file.\x1f ‚ãÖ ek8 `<pokemon>`: Sends a `ek8` file.\x1f ‚ãÖ pk7 `<pokemon>`: Sends a `pk7` file.\x1f ‚ãÖ pk6 `<pokemon>`: Sends a `pk6` file.\x1f ‚ãÖ pb8 `<pokemon>`: Sends a `eb8` file.\x1f ‚ãÖ eb8 `<pokemon>`: Sends a `eb8` file.\x1f ‚ãÖ pb7 `<pokemon>`: Sends a `pb7` file.\x1f'
)


miscellaneousval = str(
    "\x1f ‚ãÖ prefix: Fetches the bot's prefix.\x1f ‚ãÖ latency: Reports latency.\x1f ‚ãÖ invite: Sends invite link to bot's home server.\x1f ‚ãÖ support: Sends bot's donation link.\x1f ‚ãÖ vote: Vote for a SysBot mode.\x1f ‚ãÖ votelock: 3 votes will lock the channel the command is used in.\x1f ‚ãÖ addcode: Saves your friend code.\x1f ‚ãÖ fcode: Shows saved your friend code.\x1f ‚ãÖ changecode: Changes your friend code.\x1f ‚ãÖ removecode: Deletes your friend code.\x1f"
)


chanval = str(
    "\x1f ‚ãÖ lock: Prevents members from type in used channel.\x1f ‚ãÖ unlock: Allows members from type in used channel.\x1f ‚ãÖ say <message>: Sends invite link to bot's home server.\x1f ‚ãÖ purge <amount>: Bot repeats message.\x1f ‚ãÖ slowmode <amount>: Changes the slowmode of used channel.\x1f ‚ãÖ add: Adds channel to bot's announcement notification list.\x1f ‚ãÖ remove: Removes channel from bot's announcement notification list.\x1f"
)


modval = str(
    "\x1f ‚ãÖ kick  <member> (reason): Kicks mentioned member.\x1f ‚ãÖ ban  <member> (reason): Bans mentioned member.\x1f ‚ãÖ shareban <member> (reason): Bans mentioned member and announces in all linked channels.\x1f ‚ãÖ unban <member>: Unbans mentioned member.\x1f ‚ãÖ userinfo <member>: Displays mentioned member's info.\x1f ‚ãÖ warn <member> <reason>: Warns mentioned member.\x1f ‚ãÖ addrole <member> <role>: Gives mentioned member a role.\x1f ‚ãÖ removerole <member> <role>: Removes mentioned member a role.\x1f ‚ãÖ mute <member> <duration> (reason): Mutes mentioned member for said duration.\x1f ‚ãÖ unmute <member>: Unmutes member.\x1f ‚ãÖ category <channel> <category>: Moves the channels category location.\x1f ‚ãÖ addban: Adds channel to bot's shareban notification list.\x1f ‚ãÖ removeban: Removes channel from bot's shareban notification list.\x1f"
)


remoteval = str(
    '\x1f ‚ãÖ click (x, a, b, or y): Tells switch to click selected button.\x1f ‚ãÖ spamb: Tells switch to spam press the b button.\x1f ‚ãÖ click (up, right, down, left): Tells switch which direction to move.\x1f ‚ãÖ click (plus. minus, home): Clicks selected hotkey on switch.\x1f ‚ãÖ pokemon (inject, dump): Dumps or injects pokemon into box 1 slot 1.\x1f ‚ãÖ screen (on, off, shot, capture, percent): Controls the switch screen.\x1f ‚ãÖ reconnect: Attempts to reconnect to your switch.\x1f'
)


ownerval = str(
    '\x1f ‚ãÖ boton <message>: Sends a bot online message.\x1f ‚ãÖ announcment <message>: Sends an announcement message.\x1f ‚ãÖ botdown <message>: Sends a bot offline message.\x1f ‚ãÖ redact <amount>: Redacts desired amount of announcement messages.\x1f ‚ãÖ addsudo <member>: Adds member to sudo list.\x1f ‚ãÖ removesudo <member>: Removes member from sudo list.\x1f ‚ãÖ blacklist <member>: Saves your friend code.\x1f ‚ãÖ unblacklist <member>: Shows saved your friend code.\x1f ‚ãÖ loghere: Adds channel to logging output.\x1f ‚ãÖ dontlog: Removes channel from logging output.\x1f'
)


botmanval = str(
    "\x1f ‚ãÖ directmessage <userid> <content>: Sends message to directed user.\x1f ‚ãÖ send <channelid> <content>: Sends message to directed channel.\x1f ‚ãÖ list: List all servers the bot is in, including name, guild ID, owner, and invite.\x1f ‚ãÖ leave <guildid>: Leaves server from directed guild.\x1f ‚ãÖ createguild <name>: Creates a guild.\x1f ‚ãÖ deleteguild <guildid>: Deletes an owned guild.\x1f ‚ãÖ rename <name>: Renames the bot's name.\x1f ‚ãÖ repfp <image>: Change the bot's pfp.\x1f ‚ãÖ botinvite: Generates a bot invite.\x1f ‚ãÖ load <cog>: Loads a cog.\x1f ‚ãÖ reload <cog>: Reloads a cog.\x1f ‚ãÖ unload <cog>: Unloads a cog.\x1f ‚ãÖ restart: Restarts the bot.\x1f ‚ãÖ shutdown: Turns off the bot.\x1f"
)

class help(commands.Cog):
    def __init__(self, client):
        self.client = client
        DiscordComponents(self.client)

    @commands.command()
    async def help(self, ctx):

        # Embeds
        embed=discord.Embed(title=f'{self.client.user.name} Commands', description=f"Utilize the dropdown menu to select help pages.{ttr}", color= ctx.author.color)
        embed.add_field(name="üíÅ **Help Modules:**", value="Page 1 | SysBot Commands\nPage 2 | Pokemon Files Commands\nPage 3 | Miscellaneous Commands\nPage 4 | Management Commands\nPage 5 | Moderation Commands\nPage 6 | Switch Commands\nPage 7 | Owner Commands\nPage 8 | Bot Management Commands", inline=True)
        embed.add_field(name="‚ÑπÔ∏è **Bot Info:**", value=f"Servers: {len(self.client.guilds)}\nUsers: {len(self.client.users)}\nCommands: {len(self.client.commands)}\nCPU: {psutil.cpu_percent()}%\nMemory: {psutil.virtual_memory().percent}%", inline=True)
        sysbot = discord.Embed(
            title='SysBot Module', description=ttr, color=ctx.author.color
        )

        sysbot.add_field(name="SysBot Commands", value=sysbotval, inline=True)
        files = discord.Embed(
            title='Files Module', description=ttr, color=ctx.author.color
        )

        files.add_field(name="Pkx and Ekx Search Commands", value=filesval, inline=True)
        general = discord.Embed(
            title='Miscellaneous Module', description=ttr, color=ctx.author.color
        )

        general.add_field(name="General Commands", value=miscellaneousval, inline=True)
        amanagement = discord.Embed(
            title='Channel Management Module',
            description=ttr,
            color=ctx.author.color,
        )

        amanagement.add_field(name="Channel Commands", value=chanval, inline=True)
        moderation = discord.Embed(
            title='Moderation Module', description=ttr, color=ctx.author.color
        )

        moderation.add_field(name="Server Moderation Commands", value=modval, inline=True)
        sremote = discord.Embed(
            title='Switch Module', description=ttr, color=ctx.author.color
        )

        sremote.add_field(name="Switch Remote Control Commands", value=remoteval, inline=True)
        owner = discord.Embed(
            title='Owner Module', description=ttr, color=ctx.author.color
        )

        owner.add_field(name="Owner Only Commands", value=ownerval, inline=True)
        omanagement = discord.Embed(
            title='Bot Management Module', description=ttr, color=ctx.author.color
        )

        omanagement.add_field(name="Bot Management Commands", value=botmanval, inline=True)

        components=[
            [
                Select(
                    placeholder="Select a help menu",
                    options=[
                        SelectOption(label="Page 1 | SysBot Module", value="sysbot"),
                        SelectOption(label="Page 2 | Files Module", value="files"),
                        SelectOption(label="Page 3 | Miscellaneous Module", value="general"),
                        SelectOption(label="Page 4 | Channel Management Module", value="amanagement"),
                        SelectOption(label="Page 5 | Moderation Module", value="moderation"),
                        SelectOption(label="Page 6 | Switch Remote Module", value="sremote"),
                        SelectOption(label="Page 7 | Owner Module", value="owner"),
                        SelectOption(label="Page 8 | Bot Management Module", value="omanagement")
                        ],
                    )
            ],
            [
                Button(label='Support Server', style=ButtonStyle.URL, url=support2)
            ]
        ]

        message = await ctx.reply(embed=embed, components=components)

        while(True):
            try:
                interaction = await self.client.wait_for("select_option", check=None, timeout=30)
                if interaction.values[0] == "sysbot":
                    await interaction.respond(type=7, ephemeral=False, embed=sysbot)
                if interaction.values[0] == "files":
                    await interaction.respond(type=7, ephemeral=False, embed=files)
                if interaction.values[0] == "general":
                    await interaction.respond(type=7, ephemeral=False, embed=general)
                if interaction.values[0] == "amanagement":
                    await interaction.respond(type=7, ephemeral=False, embed=amanagement)
                if interaction.values[0] == "moderation":
                    await interaction.respond(type=7, ephemeral=False, embed=moderation)
                if interaction.values[0] == "sremote":
                    await interaction.respond(type=7, ephemeral=False, embed=sremote)
                if interaction.values[0] == "owner":
                    await interaction.respond(type=7, ephemeral=False, embed=owner)
                if interaction.values[0] == "omanagement":
                    await interaction.respond(type=7, ephemeral=False, embed=omanagement)
            except asyncio.TimeoutError:
                await message.disable_components()
                return


def setup(client):
    client.add_cog(help(client))